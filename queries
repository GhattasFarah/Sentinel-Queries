If user has clicked a link

DeviceNetworkEvents
| where RemoteUrl contains "rollins-mkt-prod1.campaign.adobe.com/"

Detect MFA failures for multiple applications for the same acc

let timeframe = 1d;
let threshold = 3;
SigninLogs
| where TimeGenerated >= ago(timeframe)
| where ResultDescription has "MFA"
| summarize applicationCount = dcount(AppDisplayName) by UserPrincipalName, IPAddress
| where applicationCount >= threshold

Names of Devices that have done a DCSync

SecurityAlert
| where AlertName contains "Suspected DCSync attack"
| where TimeGenerated > ago(30d)
| sort by TimeGenerated desc
| extend Dnsdomain = parse_json(Entities)[0].DnsDomain, Name = parse_json(Entities)[1].Name, Hostname = parse_json(Entities)[0].HostName
| summarize by tostring(Dnsdomain), tostring(Name), tostring(Hostname)

Data staged T1074

DeviceNetworkEvents
| where RemotePort == 53 //limits to dns queries
| extend packet = parse_json(tostring(AdditionalFields.SamplePacketContent))[0] //extracts packet content
| where packet !contains "microsoft" or packet !contains "windowsupdate" or packet !contains "outlook"
    or packet !contains "officeapps" or packet !contains "zscaler" or packet !contains "teams" //checks if they contain any safe domains
//| project TimeGenerated, DeviceId, DeviceName, packet
| limit 10


//Usage of WINRM for attackers to remotely connect to logged on user and perform malicious actions
//TTP: [1021.006]
//DS [DeviceNetworkEvents]
T1021.006 - Usage of Winrm
DeviceNetworkEvents
| where InitiatingProcessParentFileName == "svchost.exe" and InitiatingProcessFileName contains "winrm"


T1003.001 - LSASS Memory dump

DeviceEvents
| where TimeGenerated > ago(10d)
| where ProcessCommandLine contains "Invoke-Mimikatz"
or ProcessCommandLine contains "gsecdump -a" or ProcessCommandLine contains "wce -o" or ProcessCommandLine contains "procdump -ma lsass.exe"
or ProcessCommandLine contains "ntdsutil*ac i ntds*ifm*create full"
| where InitiatingProcessFolderPath !contains "C:\\WINDOWS\\system32\\lsass.exe" 
and (RegistryKey contains "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Provider\\" 
or RegistryKey contains "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\" 
or RegistryKey contains "\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SecurityProviders\\" 
or RegistryKey contains "\\Control\\SecurityProviders\\WDigest\\") and RegistryKey !contains "\\Lsa\\RestrictRemoteSamEventThrottlingWindow"


T1003.006 DCSync monitoring

//Analytic for T1003.006: DCSync Monitoring from MITRE ATT&CK
//
//Tactics: Credential Access
//
//Mitre Framework link: https://attack.mitre.org/techniques/T1003/006/
SecurityEvent
| where EventID == 4662 and AccountType == "User"
| where Properties has "{1131f6ad-9c07-11d1-f79f-00c04fc2dcd2}" or Properties has "{19195a5b-6da0-11d0-afd3-00c04fd930c9}"
| project TimeGenerated,  Account, Activity, Properties, SubjectLogonId, Computer
| distinct Account


T1053.005 - suspicious scheduled task creation/modification and execution

//Analytic to T1053.005: Suspicious scheduled task creation/modification + Execution (Windows)
//
//Aims to detect all creation, modification, and execution of malicious scheduled tasks
//
//Tactics: Execution, Persistence, Privilege Escalation
//
let args = dynamic ([' /create', ' /run',' /S', '-change', '-create', '-run', ' -s']); //list of args to create, modify, or execute
DeviceProcessEvents
| where ((FolderPath has "schtasks.exe" or FolderPath has "taskeng.exe" or FolderPath has "at.exe") and ProcessCommandLine has_any(args) and InitiatingProcessAccountName != "system") //ignores scheduled tasks created by Microsoft system
| project TimeGenerated, AccountName, AccountUpn, FolderPath, ProcessCommandLine

//Analytic for T1003.001: LSASS Credential Dumping from MITRE ATT&CK framework
//
//Tactics: Credential access
//
//MITRE framework link: OS Credential Dumping: LSASS Memory, Sub-technique T1003.001 - Enterprise | MITRE ATT&CKÂ® 
//
DeviceEvents
| where ActionType contains "OpenProccessApi" and FileName=~"lsass.exe" //checks the API call and if lsass executable
| extend AccessRights = tostring(parse_json(AdditionalFields).DesiredAccess), CallTrace = tostring(parse_json(AdditionalFields).ImageName)
| where AccessRights == "0x1fffff" and CallTrace has_any ("dbghelp.dll", "dbgcore.dll")
| project TimeGenerated, DeviceId, DeviceName, AccountName, LocalIP, RemoteIP


SMB Admin shares
T1562.

IdentityDirectoryEvents
| where ActionType contains 'SMB'
| extend Path = tostring(parse_json(AdditionalFields.FilePath)), FileName = tostring(parse_json(AdditionalFields.FileName)), Count = tostring(parse_json(AdditionalFields.Count))
| project TimeGenerated, ActionType, DeviceName, DestinationDeviceName, Path, FileName, Count

Server names, Ips, and OS
DeviceNetworkInfo
| where DeviceName startswith 'cit' or DeviceName startswith "srv"
| extend Ip =  tostring(IPAddresses[0].IPAddress)
| project DeviceName, Ip, tostring(DeviceId)
| join ( DeviceInfo
    | project OSDistribution, DeviceId) on $left.DeviceId == $right.DeviceId
    | summarize by DeviceName, Ip, OSDistribution


Salesforce brute force logs
salesforce_CL
| where channel_s == "/event/LoginEventStream"
| where data_payload_Username_s contains "nubra"
| where data_payload_Status_s != "Success" or data_payload_Status_s == "Success"
| summarize count () by data_payload_Username_s, data_payload_City_s, data_payload_Subdivision_s, data_payload_Browser_s, data_payload_Platform_s, data_payload_SourceIp_s, data_payload_Status_s, TimeGenerated
| sort by TimeGenerated desc

